@page "/products"
@inject IDialogService DialogService
@using Mercadona.Backend.Data;
@using Mercadona.Backend.Models;

<PageTitle>Produits</PageTitle>

<MudSelect T="string" Style="margin:0px 12px" Label="Catégories" AnchorOrigin="Origin.BottomCenter" MultiSelection="true" @bind-SelectedValues="SelectedCategories" SelectAll="true" SelectAllText="Toutes les catégories" AdornmentIcon="@Icons.Material.Filled.Search">
    @foreach (string category in categories)
    {
        <MudSelectItem T="string" Value="@category">@category</MudSelectItem>
    }
</MudSelect>
<MudGrid Style="width:100%;margin:unset">
    @foreach (DiscountedProduct discountedProduct in filteredDiscountedProducts)
    {
        <MudItem xs="12" sm="6" md="4">
            <MudCard>
                <MudCardMedia Image=@(GetImageURL(discountedProduct.Id)) Style="background-size:contain" />
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText>@discountedProduct.Label</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText>@discountedProduct.Description</MudText>
                    <MudText>@discountedProduct.Category</MudText>
                    <MudText>@discountedProduct.Price</MudText>
                    <MudText>@discountedProduct.Offer?.Percentage</MudText>
                    <MudText>@discountedProduct.DiscountedPrice</MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudButton OnClick="@((e) => OpenAddOfferDialog(discountedProduct))">Ajouter promotion</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    }
</MudGrid>
<MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Style="position: fixed;bottom: 10px; right: 10px" Title="Ajouter un produit" OnClick="OpenAddProductDialog" />

@code {
    List<Product> products = new List<Product>();
    List<DiscountedProduct> discountedProducts = new List<DiscountedProduct>();
    List<string> categories = new List<string>();
    List<DiscountedProduct> filteredDiscountedProducts => discountedProducts.Where(_ => SelectedCategories.Any() ? SelectedCategories.Contains(_.Category) : true).ToList();

    protected override Task OnInitializedAsync()
    {
        products = new List<Product>
        {
            new Product(() => File.Open("wwwroot/assets/steaksX8.webp", FileMode.Open, FileAccess.Read, FileShare.ReadWrite)){ Label = "Steacks x 8", Description = "Boite de steacks de boeuf en lot de 8.", Category = "Surgelé", Price = 8.99M },
            new Product(() => File.Open("wwwroot/assets/robeLongue.webp", FileMode.Open, FileAccess.Read, FileShare.ReadWrite)){ Label = "Robe longue", Description = "Sulime robe longue blanche qui vous rendra belle pour l'été.", Category = "Prêt à porter", Price = 84.99M },
            new Product(() => File.Open("wwwroot/assets/macbook.jpeg", FileMode.Open, FileAccess.Read, FileShare.ReadWrite)){ Label = "MacBook Air", Description = "Cette ordinateur vous rendra de grands services pour le travail.", Category = "Electronique", Price = 1099.99M },
        };
        discountedProducts = products.Select(_ => new DiscountedProduct(_)).ToList();
        categories = products.Select(_ => _.Category).OrderBy(_ => _).ToList();
        return base.OnInitializedAsync();
    }

    IEnumerable<string> _selectedCategories = new HashSet<string>();
    IEnumerable<string> SelectedCategories
    {
        get => _selectedCategories;
        set
        {
            _selectedCategories = value;
        }
    }

    string? GetImageURL(Guid productId)
    {
        if (products.FirstOrDefault(_ => _.Id == productId)?.ImageStream is FileStream fileStream)
            return $"assets/{Path.GetFileName(fileStream.Name)}";
        else
            return null;
    }

    void OpenAddProductDialog()
    {
        DialogOptions options = new DialogOptions { CloseOnEscapeKey = true, DisableBackdropClick = true };
        DialogParameters parameters = new DialogParameters();
        parameters.Add("DiscountedProducts", discountedProducts);
        DialogService.Show<AddProductDialog>("Ajouter un produit", parameters, options);
    }

    void OpenAddOfferDialog(DiscountedProduct discountedProduct)
    {
        DialogOptions options = new DialogOptions { CloseOnEscapeKey = true, DisableBackdropClick = true };
        DialogParameters parameters = new DialogParameters();
        parameters.Add("Product", products.Single(_ => _.Id == discountedProduct.Id));
        DialogService.Show<ApplyOfferToProductDialog>("Appliquer une promotion à un produit", parameters, options);
    }
}
